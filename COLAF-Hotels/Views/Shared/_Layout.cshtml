@inject IHttpContextAccessor HttpContextAccessor
@{
    var user = HttpContextAccessor.HttpContext?.Session.GetString("User");
    var role = HttpContextAccessor.HttpContext?.Session.GetString("Role");
    var guestId = HttpContextAccessor.HttpContext?.Session.GetString("GuestId");
    var profileImageAlt = HttpContextAccessor.HttpContext?.Session.GetString("ProfileImageAlt");
    var profileImage = HttpContextAccessor.HttpContext?.Session.GetString("ProfileImage");
    string currentPath = Context.Request.Path.Value;

    Console.WriteLine($"Retrieved from Session in Layout - Username: {user}, Role: {role}");
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    @if (!string.IsNullOrEmpty(role))
    {
        switch (role)
        {
            case "Admin":
                <title>@ViewBag.Title - Admin</title>
                break;
            default:
                <title>@ViewBag.Title - COLAF-Hotel</title>
                break;
        }
    }
    else
    {
        <title>@ViewBag.Title - COLAF-Hotel</title>
    }
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <script src="https://cdn.tailwindcss.com"></script>
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        coffee: {
                            dark: '#2C1E1A',
                            medium: '#5E4B3B',
                            light: '#9B7E6B',
                            cream: '#E6DBCA',
                            accent: '#D4A067'
                        }
                    }
                }
            }
        }
    </script>
    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
    <script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.15/index.global.min.js'></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/alpinejs/3.12.0/cdn.min.js" defer></script>
    <script>AOS.init();</script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&family=Playfair+Display:wght@400;500;600;700&display=swap" rel="stylesheet">
</head>
<body class="font-['Inter',sans-serif] bg-coffee-cream text-coffee-dark min-h-screen flex flex-col bg-opacity-90 bg-cover bg-center bg-fixed relative">
    <nav class="fixed top-0 w-full bg-coffee-dark shadow-lg z-50 bg-opacity-90 backdrop-blur-sm">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between h-20">
                <!-- Logo -->
                <div class="flex-shrink-0 flex items-center">
                    @if (!string.IsNullOrEmpty(role))
                    {
                        <a href="@Url.Action("Index", "Dashboard")" class="flex items-center group">
                            <span class="text-coffee-accent font-['Playfair_Display',serif] text-3xl font-bold tracking-tight">COLAF</span>
                            <span class="text-white font-['Playfair_Display',serif] text-3xl font-light">-Hotel</span>
                            <span class="ml-2 text-coffee-light transition-colors duration-300 group-hover:text-coffee-accent">
                                <i class="fa-solid fa-mug-hot"></i>
                            </span>
                        </a>
                    }
                    else
                    {
                        <a href="@Url.Action("Login", "User")" class="flex items-center group">
                            <span class="text-coffee-accent font-['Playfair_Display',serif] text-3xl font-bold tracking-tight">COLAF</span>
                            <span class="text-white font-['Playfair_Display',serif] text-3xl font-light">-Hotel</span>
                            <span class="ml-2 text-coffee-light transition-colors duration-300 group-hover:text-coffee-accent">
                                <i class="fa-solid fa-mug-hot"></i>
                            </span>
                        </a>
                    }
                </div>

                <!-- Desktop Navigation -->
                <div class="hidden md:flex md:items-center">
                    @if (string.IsNullOrEmpty(role))
                    {
                        <a href="@Url.Action("List", "Room")"
                           class="group relative text-lg font-medium text-white hover:text-coffee-accent transition-colors duration-300 ease-in-out">
                            BOOK A ROOM
                            <span class="absolute -bottom-1 left-0 w-0 h-0.5 bg-coffee-accent transition-all duration-300 group-hover:w-full"></span>
                        </a>
                    }

                    @if (!string.IsNullOrEmpty(role))
                    {
                        @switch (role)
                        {
                            case "Guest":
                                @await Html.PartialAsync("Pages/_GuestNavLinks")
                                break;
                            case "Admin":
                                @await Html.PartialAsync("Pages/_AdminNavLinks")
                                break;
                            case "Housekeeping Manager":
                            case "Housekeeper":
                                <a href="@Url.Action("Tasks", "Housekeeping")"
                                   class="relative text-sm font-medium cursor-pointer
                          after:content-[''] after:absolute after:-bottom-1 after:left-1/2
                          after:w-0 after:h-0.5 after:bg-indigo-400 after:transition-all after:duration-300
                          hover:after:w-full hover:after:left-0 hover:text-indigo-100
                          @(Context.Request.Path.Value == Url.Action("Tasks", "Housekeeping") ? "text-indigo-300" : "text-white")">
                                    HOUSEKEEPING
                                </a>
                                break;
                            case "Staff":
                                @await Html.PartialAsync("Pages/_StaffNavLinks")
                                break;
                        }
                    }
                </div>

                <!-- Mobile menu button -->
                <div class="md:hidden flex items-center">
                    <button type="button" class="text-coffee-light hover:text-white focus:outline-none transition-colors duration-300" id="mobileMenuButton">
                        <i class="fa-solid fa-bars text-2xl"></i>
                    </button>
                </div>

                <!-- User Info / Login -->
                <div class="hidden md:flex items-center space-x-4">
                    @if (!string.IsNullOrEmpty(user))
                    {
                        <div class="flex items-center space-x-3">
                            @if (profileImage == "null" && guestId != null)
                            {
                                <div class="bg-coffee-accent rounded-full p-1 transition-transform duration-200 hover:scale-110">
                                    <a href="@Url.Action("Profile", "Guest")"
                                       class="bg-white rounded-full h-10 w-10 flex items-center justify-center text-coffee-dark font-bold text-sm">
                                        @profileImageAlt
                                    </a>
                                </div>
                            }
                            else if (guestId != null)
                            {
                                <a href="@Url.Action("Profile", "Guest")"
                                   class="bg-coffee-accent rounded-full p-1 transition-transform duration-200 hover:scale-110">
                                    <img src="@profileImage" alt="@profileImageAlt" class="h-10 w-10 rounded-full object-cover" />
                                </a>
                            }
                            <span class="text-coffee-light">Welcome, <span class="text-coffee-accent font-medium">@user</span></span>
                            <a href="@Url.Action("Logout", "User")"
                               class="bg-coffee-accent text-coffee-dark px-4 py-2 rounded-lg hover:bg-coffee-light transition-colors duration-300 flex items-center space-x-2 shadow-md hover:shadow-lg">
                                <span>Logout</span>
                                <i class="fa-solid fa-sign-out-alt"></i>
                            </a>
                        </div>
                    }
                    else
                    {
                        <a href="@Url.Action("Login", "User")"
                           class="bg-coffee-accent text-coffee-dark px-4 py-2 rounded-lg hover:bg-coffee-light transition-colors duration-300 flex items-center space-x-2 shadow-md hover:shadow-lg">
                            <span>Login</span>
                            <i class="fa-solid fa-sign-in-alt"></i>
                        </a>
                    }
                </div>
            </div>
        </div>
    </nav>

    <main class="flex-grow pt-24 pb-16">
        @RenderBody()
    </main>

    <footer class="bg-coffee-dark text-white py-10 mt-auto">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex flex-col md:flex-row justify-between items-center">
                <div class="mb-6 md:mb-0">
                    <a href="#" class="flex items-center">
                        <span class="text-coffee-accent font-['Playfair_Display',serif] text-3xl font-bold tracking-tight">COLAF</span>
                        <span class="text-white font-['Playfair_Display',serif] text-3xl font-light">-Hotel</span>
                    </a>
                    <p class="mt-2 text-coffee-light">Experience luxury with a coffee twist</p>
                </div>
                <div class="flex space-x-6">
                    <a href="#" class="text-coffee-light hover:text-coffee-accent transition-colors duration-300">
                        <i class="fab fa-facebook-f text-xl"></i>
                    </a>
                    <a href="#" class="text-coffee-light hover:text-coffee-accent transition-colors duration-300">
                        <i class="fab fa-instagram text-xl"></i>
                    </a>
                    <a href="#" class="text-coffee-light hover:text-coffee-accent transition-colors duration-300">
                        <i class="fab fa-twitter text-xl"></i>
                    </a>
                </div>
            </div>
            <div class="mt-8 border-t border-coffee-medium pt-8 flex flex-col md:flex-row justify-between">
                <p>&copy; @DateTime.Now.Year - COLAF-Hotel. All rights reserved.</p>
                <div class="mt-4 md:mt-0 flex space-x-4">
                    <a href="#" class="text-coffee-light hover:text-coffee-accent transition-colors duration-300">Privacy Policy</a>
                    <a href="#" class="text-coffee-light hover:text-coffee-accent transition-colors duration-300">Terms of Service</a>
                    <a href="#" class="text-coffee-light hover:text-coffee-accent transition-colors duration-300">Contact Us</a>
                </div>
            </div>
        </div>
    </footer>
</body>
@RenderSection("Scripts", required: false)

    <script>
        // Mobile menu toggle
        document.getElementById('mobileMenuButton').addEventListener('click', function() {
            const mobileMenu = document.getElementById('mobileMenu');
            mobileMenu.classList.toggle('hidden');
        });
        document.addEventListener("DOMContentLoaded", function () {
        // Make the fetch call to get the unread notification count
            fetch('/Notification/GetUnreadNotificationCount')
                .then(response => response.json())
                .then(data => {
                    const count = data.count;
                    const notificationCountElement = document.getElementById('notificationCount');
                    console.log("Getting unread notification");

                    if (count > 99) {
                        notificationCountElement.textContent = 99;  // Cap the count at 99
                        notificationCountElement.hidden = false;    // Make sure it's visible
                    } else if (count > 0) {
                        notificationCountElement.textContent = count;  // Update the count
                        notificationCountElement.hidden = false;      // Make sure it's visible
                    } else {
                        notificationCountElement.textContent = 0;    // Clear if no unread notifications
                        notificationCountElement.hidden = true;      // Hide the element
                    }

                })
                .catch(error => {
                    console.error('Error fetching notification count:', error);
                    document.getElementById('notificationCount').textContent = '';  // Handle any errors
                });
        });
    </script>

    <style>
        /* Coffee beans background animation */
        body::before {
            content: '';
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-image: url('/api/placeholder/1920/1080');
            background-size: cover;
            opacity: 0.05;
            z-index: -1;
        }

        /* Custom scrollbar */
        ::-webkit-scrollbar {
            width: 10px;
        }

        ::-webkit-scrollbar-track {
            background: #E6DBCA;
        }

        ::-webkit-scrollbar-thumb {
            background: #9B7E6B;
            border-radius: 5px;
        }

            ::-webkit-scrollbar-thumb:hover {
                background: #5E4B3B;
            }
        </style>

<style>
    /* Custom Flatpickr Styles */
    .flatpickr-calendar {
        border-radius: 12px;
        box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.15);
        font-family: 'Inter', sans-serif;
    }

    .flatpickr-day {
        border-radius: 8px;
        transition: all 0.2s ease-in-out;
    }

        .flatpickr-day:hover {
            background: #007bff !important;
            color: white !important;
            transform: scale(1.05);
        }

        .flatpickr-day.today {
            border: 2px solid #007bff;
            font-weight: bold;
            color: #007bff;
        }

        .flatpickr-day.selected {
            background: #007bff !important;
            color: white !important;
        }

    .flatpickr-month {
        font-size: 1rem;
        font-weight: 600;
    }

    .flatpickr-current-month {
        font-size: 1.2rem;
        font-weight: bold;
    }

    .flatpickr-prev-month, .flatpickr-next-month {
        transition: all 0.2s ease;
    }

        .flatpickr-prev-month:hover, .flatpickr-next-month:hover {
            background: rgba(0, 123, 255, 0.1);
            border-radius: 50%;
        }

</style>
