@{
    ViewBag.Title = "Home";
}
@inject IHttpContextAccessor HttpContextAccessor
@model IEnumerable<COLAFHotel.Models.User>

@{
    var user = HttpContextAccessor.HttpContext?.Session.GetString("User");
    var role = HttpContextAccessor.HttpContext?.Session.GetString("Role");
}

<div class="p-6 shadow-lg rounded-lg bg-white">
    @if (!string.IsNullOrEmpty(role))
    {
        @if (role == "Guest")
        {
            <p class="text-4xl font-bold text-gray-800 text-center">🚧 Under Construction!<br /> Dashboard</p>
        }
        else if (role == "Admin")
        {
            <div class="flex justify-between items-center mb-4">
                <h2 class="text-2xl font-bold">Manage Users</h2>
            </div>

            @if (Model?.Any() == true)
            {
                <div class="overflow-x-auto">
                    <table class="min-w-full bg-white border border-gray-200 rounded-lg shadow-md">
                        <thead>
                            <tr class="bg-gray-100 text-gray-700 text-left">
                                <th class="p-3 border">Username</th>
                                <th class="p-3 border">Email</th>
                                <th class="p-3 border">Role</th>
                                <th class="p-3 border">Actions</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var userItem in Model)
                            {
                                <tr class="border hover:bg-gray-50">
                                    <td class="p-3 border">@userItem.username</td>
                                    <td class="p-3 border">@userItem.email</td>
                                    <td class="p-3 border">
                                        <select class="px-2 py-1 border rounded" onchange="updateRole(this, '@userItem.user_id')">
                                            <option value="User" selected="@(userItem.role == "User" ? "selected" : null)">User</option>
                                            <option value="Admin" selected="@(userItem.role == "Admin" ? "selected" : null)">Admin</option>
                                        </select>
                                    </td>
                                    <td class="p-3 border">
                                        <button class="bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600" onclick="confirmDelete('@userItem.user_id')">Delete</button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <p class="text-gray-500">No users found.</p>
            }
        }
    }
    else
    {
        <p class="text-red-500 font-semibold">Access Denied: Role not defined.</p>
    }
</div>

<!-- Delete Confirmation Modal -->
<div id="deleteModal" class="hidden fixed inset-0 bg-gray-900 bg-opacity-50 flex items-center justify-center">
    <div class="bg-white p-6 rounded-lg shadow-lg max-w-sm">
        <h3 class="text-lg font-semibold mb-4">Confirm Deletion</h3>
        <p class="text-gray-700 mb-4">Are you sure you want to delete this user?</p>
        <div class="flex justify-end space-x-2">
            <button class="px-4 py-2 bg-gray-300 rounded hover:bg-gray-400" onclick="closeModal()">Cancel</button>
            <button id="confirmDeleteBtn" class="px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600">Delete</button>
        </div>
    </div>
</div>

<script>
    function updateRole(select, userId) {
        const newRole = select.value;
        fetch(`/Admin/UpdateRole/${userId}?role=${newRole}`, { method: 'POST' })
            .then(response => response.json())
            .then(data => alert(data.message))
            .catch(error => console.error('Error:', error));
    }

    function confirmDelete(userId) {
        document.getElementById("deleteModal").classList.remove("hidden");
        document.getElementById("confirmDeleteBtn").onclick = function () {
            fetch(`/Admin/DeleteUser/${userId}`, { method: 'DELETE' })
                .then(response => response.json())
                .then(data => { alert(data.message); location.reload(); })
                .catch(error => console.error('Error:', error));
        };
    }

    function closeModal() {
        document.getElementById("deleteModal").classList.add("hidden");
    }
</script>
