@inject IHttpContextAccessor HttpContextAccessor
@model IEnumerable<COLAFHotel.Models.Booking>

@{
    ViewBag.Title = "Checking Processes";
    var role = HttpContextAccessor.HttpContext?.Session.GetString("Role");
    var today = DateTime.Now.Date;
}
<div class="container mx-auto p-6 bg-coffee-cream bg-opacity-10">
    <div class="mb-8">
        <h3 class="text-2xl font-serif font-bold text-coffee-dark inline-block relative">
            <span class="relative z-10">Check In and Check Out Process</span>
            <span class="absolute bottom-0 left-0 w-full h-2 bg-coffee-accent bg-opacity-40 -z-0"></span>
        </h3>
    </div>

    <!-- Search and Filter Controls -->
    <div class="mb-6 bg-white p-4 rounded-lg shadow border border-coffee-cream">
        <div class="flex flex-col md:flex-row md:justify-between gap-4">
            <!-- Search Box -->
            <div class="w-full md:w-1/3">
                <label for="searchInput" class="block text-sm font-medium text-coffee-dark mb-1">Search</label>
                <input type="text" id="searchInput" placeholder="Search by guest name, room number, or booking ID..."
                       class="w-full px-3 py-2 border border-coffee-cream rounded-md focus:outline-none focus:ring-2 focus:ring-coffee-accent">
            </div>

            <!-- Filter Options -->
            <div class="w-full md:w-2/3 grid grid-cols-1 md:grid-cols-4 gap-4">
                <div>
                    <label for="guestSort" class="block text-sm font-medium text-coffee-dark mb-1">Guest Name</label>
                    <select id="guestSort" class="w-full px-3 py-2 border border-coffee-cream rounded-md focus:outline-none focus:ring-2 focus:ring-coffee-accent">
                        <option value="">Sort by</option>
                        <option value="asc">A-Z</option>
                        <option value="desc">Z-A</option>
                    </select>
                </div>
                <div>
                    <label for="bookingSort" class="block text-sm font-medium text-coffee-dark mb-1">Booking ID</label>
                    <select id="bookingSort" class="w-full px-3 py-2 border border-coffee-cream rounded-md focus:outline-none focus:ring-2 focus:ring-coffee-accent">
                        <option value="">Sort by</option>
                        <option value="asc">Lowest first</option>
                        <option value="desc">Highest first</option>
                    </select>
                </div>
                <div>
                    <label for="checkinSort" class="block text-sm font-medium text-coffee-dark mb-1">Check-in Date</label>
                    <select id="checkinSort" class="w-full px-3 py-2 border border-coffee-cream rounded-md focus:outline-none focus:ring-2 focus:ring-coffee-accent">
                        <option value="">Sort by</option>
                        <option value="asc">Earliest first</option>
                        <option value="desc">Latest first</option>
                    </select>
                </div>
                <div>
                    <label for="checkoutSort" class="block text-sm font-medium text-coffee-dark mb-1">Check-out Date</label>
                    <select id="checkoutSort" class="w-full px-3 py-2 border border-coffee-cream rounded-md focus:outline-none focus:ring-2 focus:ring-coffee-accent">
                        <option value="">Sort by</option>
                        <option value="asc">Earliest first</option>
                        <option value="desc">Latest first</option>
                    </select>
                </div>
            </div>
        </div>
        <div class="mt-4 flex justify-between items-center">
            <div class="flex items-center">
                <input type="checkbox" id="hideCancelled" class="h-4 w-4 text-coffee-accent focus:ring-coffee-accent" checked>
                <label for="hideCancelled" class="ml-2 block text-sm text-coffee-dark">Hide cancelled reservations</label>
            </div>
            <div>
                <button id="resetFilters" class="px-3 py-1 bg-gray-200 hover:bg-gray-300 text-gray-800 rounded-md transition-colors duration-150 text-sm">
                    Reset Filters
                </button>
                <button id="applyFilters" class="ml-2 px-3 py-1 bg-coffee-accent hover:bg-coffee-dark text-white rounded-md transition-colors duration-150 text-sm">
                    Apply Filters
                </button>
            </div>
        </div>
    </div>

    <div class="mb-8">
        <a href="@Url.Action("CancelAllExpiredReservation", "CheckInCheckOut")"
           class="px-4 py-2 bg-red-500 hover:bg-red-700 text-white rounded-md transition-colors duration-150 inline-block text-sm font-medium"
           onclick="return confirm('This reservation has expired. Cancel it?')">
            Cancel all expired
        </a>
    </div>
    @if (TempData["SuccessMessage"] != null)
    {
        <div id="successMessage" class="mb-4 p-4 bg-green-100 text-green-800 rounded-md border border-green-300 relative">
            <span>@TempData["SuccessMessage"]</span>
            <button type="button" onclick="document.getElementById('successMessage').remove()"
                    class="absolute top-2 right-2 text-green-700 hover:text-green-900">
                &times;
            </button>
        </div>
    }

    <div class="bg-white shadow-lg rounded-xl overflow-hidden border border-coffee-cream">
        <div class="overflow-x-auto">
            <table class="w-full" id="bookingsTable">
                <thead>
                    <tr class="bg-coffee-dark text-coffee-cream">
                        @if (Context.Session.GetString("Role") == "Staff" || Context.Session.GetString("Role") == "Admin")
                        {
                            <th class="py-4 px-6 text-left font-medium text-sm tracking-wider">Guest Name</th>
                        }
                        <th class="py-4 px-6 text-left font-medium text-sm tracking-wider">Booking ID</th>
                        <th class="py-4 px-6 text-left font-medium text-sm tracking-wider">Room</th>
                        <th class="py-4 px-6 text-left font-medium text-sm tracking-wider">Check-In</th>
                        <th class="py-4 px-6 text-left font-medium text-sm tracking-wider">Check-Out</th>
                        <th class="py-4 px-6 text-left font-medium text-sm tracking-wider">Status</th>
                        <th class="py-4 px-6 text-left font-medium text-sm tracking-wider">Balance</th>
                        <th class="py-4 px-6 text-left font-medium text-sm tracking-wider">Actions</th>
                    </tr>
                </thead>
                <tbody class="divide-y divide-coffee-cream">
                    @foreach (var booking in Model)
                    {
                        var daysUntilCheckIn = (booking.check_in_date.Date - today).Days;
                        var daysAfterCheckIn = (today - booking.check_in_date.Date).Days;
                        var isCheckInDay = booking.check_in_date.Date == today;
                        var isCheckOutDay = booking.check_out_date.Date == today;
                        var isReservationExpired = daysAfterCheckIn > 2 && booking.status == "Confirmed";

                        <tr class="hover:bg-coffee-cream hover:bg-opacity-20 transition-colors duration-150 booking-row"
                            data-guest-name="@(booking.guestName ?? (booking.Guest?.User?.firstname + " " + booking.Guest?.User?.lastname))"
                            data-booking-id="@booking.booking_id"
                            data-room-number="@booking.Room.RoomNumber"
                            data-status="@booking.status"
                            data-checkin-date="@booking.check_in_date.ToString("yyyy-MM-dd")"
                            data-checkout-date="@booking.check_out_date.ToString("yyyy-MM-dd")">
                            @if (Context.Session.GetString("Role") == "Staff" || Context.Session.GetString("Role") == "Admin")
                            {
                                @if (booking.guestName != null)
                                {
                                    <td class="py-4 px-6 text-coffee-medium">@booking.guestName (WALK IN)</td>
                                }
                                else
                                {
                                    <td class="py-4 px-6 text-coffee-medium">@booking.Guest.User.firstname @booking.Guest.User.lastname</td>
                                }
                            }
                            <td class="py-4 px-6 text-coffee-dark font-medium">#@booking.booking_id</td>
                            <td class="py-4 px-6 text-coffee-medium">Room @booking.Room.RoomNumber</td>
                            <td class="py-4 px-6 text-coffee-medium">@booking.check_in_date.ToString("MMM dd, yyyy")</td>
                            <td class="py-4 px-6 text-coffee-medium">@booking.check_out_date.ToString("MMM dd, yyyy")</td>
                            <td class="py-4 px-6">
                                @if (booking.status == "Confirmed")
                                {
                                    <span class="px-3 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800 border border-green-200">
                                        Confirmed
                                    </span>
                                }
                                else if (booking.status == "Pending")
                                {
                                    <span class="px-3 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800 border border-yellow-200">
                                        Pending
                                    </span>
                                }
                                else if (booking.status == "Checked In")
                                {
                                    <span class="px-3 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800 border border-blue-200">
                                        Checked In
                                    </span>
                                }
                                else if (booking.status == "Checked Out" || booking.status == "Paid")
                                {
                                    <span class="px-3 py-1 rounded-full text-xs font-medium bg-purple-100 text-purple-800 border border-purple-200">
                                        @booking.status
                                    </span>
                                }
                                else
                                {
                                    <span class="px-3 py-1 rounded-full text-xs font-medium bg-red-100 text-red-800 border border-red-200">
                                        @booking.status
                                    </span>
                                }
                            </td>
                            <td class="py-4 px-6 text-coffee-medium @(booking.totalBalance > 0 ? "text-red-700" : "text-green-700")">₱ @booking.totalBalance</td>
                            <td class="py-4 px-6">
                                @if (booking.status == "Paid")
                                {
                                    <span class="px-3 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800">
                                        Completed
                                    </span>
                                }
                                else if (isCheckOutDay && booking.status == "Checked In")
                                {
                                    <a href="@Url.Action("CheckOut", "CheckInCheckOut", new { id = booking.booking_id })"
                                       class="px-4 py-2 bg-coffee-accent hover:bg-coffee-dark text-white rounded-md transition-colors duration-150 inline-block text-sm font-medium">
                                        Check Out
                                    </a>
                                }
                                else if (booking.status == "Confirmed" && daysAfterCheckIn > 0 && daysAfterCheckIn <= 2)
                                {
                                    <a href="@Url.Action("ProcessCheckIn", "CheckInCheckOut", new { id = booking.booking_id })"
                                       class="px-4 py-2 bg-yellow-500 hover:bg-yellow-600 text-white rounded-md transition-colors duration-150 inline-block text-sm font-medium">
                                        Late Check-In
                                    </a>
                                }

                                else if (isCheckInDay && booking.status == "Confirmed")
                                {
                                    <a href="@Url.Action("ProcessCheckIn", "CheckInCheckOut", new { id = booking.booking_id })"
                                       class="px-4 py-2 bg-coffee-medium hover:bg-coffee-dark text-white rounded-md transition-colors duration-150 inline-block text-sm font-medium">
                                        Check In
                                    </a>
                                }
                                else if (isReservationExpired)
                                {
                                    <a href="@Url.Action("CancelExpiredReservation", "CheckInCheckOut", new { id = booking.booking_id })"
                                       class="px-4 py-2 bg-red-500 hover:bg-red-700 text-white rounded-md transition-colors duration-150 inline-block text-sm font-medium"
                                       onclick="return confirm('This reservation has expired. Cancel it?')">
                                        Cancel Expired
                                    </a>
                                }
                                else
                                {
                                    @if (daysUntilCheckIn > 30)
                                    {
                                        <span class="px-3 py-1 rounded-full text-xs font-medium bg-gray-100 text-gray-800">
                                            @daysUntilCheckIn days until check-in
                                        </span>
                                    }
                                    else if (daysUntilCheckIn > 7)
                                    {
                                        <span class="px-3 py-1 rounded-full text-xs font-medium bg-blue-50 text-blue-800">
                                            @(daysUntilCheckIn / 7) week(s) until check-in
                                        </span>
                                    }
                                    else if (daysUntilCheckIn > 0)
                                    {
                                        <span class="px-3 py-1 rounded-full text-xs font-medium bg-yellow-50 text-yellow-800">
                                            @daysUntilCheckIn day(s) until check-in
                                        </span>
                                    }
                                    else if (booking.status == "Checked In")
                                    {
                                        var daysUntilCheckOut = (booking.check_out_date.Date - today).Days;
                                        <span class="px-3 py-1 rounded-full text-xs font-medium bg-green-50 text-green-800">
                                            @daysUntilCheckOut day(s) until check-out
                                        </span>
                                    }
                                }
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // Elements
        const searchInput = document.getElementById('searchInput');
        const guestSort = document.getElementById('guestSort');
        const bookingSort = document.getElementById('bookingSort');
        const checkinSort = document.getElementById('checkinSort');
        const checkoutSort = document.getElementById('checkoutSort');
        const hideCancelled = document.getElementById('hideCancelled');
        const resetFilters = document.getElementById('resetFilters');
        const applyFilters = document.getElementById('applyFilters');
        const bookingRows = document.querySelectorAll('.booking-row');


        // Apply filters function
        function applyAllFilters() {
            const searchTerm = searchInput.value.toLowerCase();
            const guestSortValue = guestSort.value;
            const bookingSortValue = bookingSort.value;
            const checkinSortValue = checkinSort.value;
            const checkoutSortValue = checkoutSort.value;
            const hideCancel = hideCancelled.checked;

            // First filter the rows based on search and hide cancelled
            bookingRows.forEach(row => {
                const guestName = row.getAttribute('data-guest-name')?.toLowerCase() || '';
                const bookingId = row.getAttribute('data-booking-id')?.toLowerCase() || '';
                const roomNumber = row.getAttribute('data-room-number')?.toLowerCase() || '';
                const status = row.getAttribute('data-status');

                // Search filter
                const matchesSearch = !searchTerm ||
                    guestName.includes(searchTerm) ||
                    bookingId.includes(searchTerm) ||
                    `room ${roomNumber}`.includes(searchTerm);

                // Hide cancelled filter
                const showBasedOnStatus = !hideCancel || status !== 'Cancelled';

                // Apply visibility
                row.style.display = (matchesSearch && showBasedOnStatus) ? '' : 'none';
            });

            // Sort the visible rows
            sortRows();
        }

        // Sort function
        function sortRows() {
            const table = document.getElementById('bookingsTable');
            const tbody = table.querySelector('tbody');
            const rows = Array.from(tbody.querySelectorAll('tr:not([style*="display: none"])'));

            // Apply the sort based on active sort selections
            if (guestSort.value) {
                rows.sort((a, b) => {
                    const aVal = a.getAttribute('data-guest-name') || '';
                    const bVal = b.getAttribute('data-guest-name') || '';
                    return guestSort.value === 'asc' ? aVal.localeCompare(bVal) : bVal.localeCompare(aVal);
                });
            }

            if (bookingSort.value) {
                rows.sort((a, b) => {
                    const aVal = parseInt(a.getAttribute('data-booking-id') || '0');
                    const bVal = parseInt(b.getAttribute('data-booking-id') || '0');
                    return bookingSort.value === 'asc' ? aVal - bVal : bVal - aVal;
                });
            }

            if (checkinSort.value) {
                rows.sort((a, b) => {
                    const aVal = a.getAttribute('data-checkin-date') || '';
                    const bVal = b.getAttribute('data-checkin-date') || '';
                    return checkinSort.value === 'asc' ? aVal.localeCompare(bVal) : bVal.localeCompare(aVal);
                });
            }

            if (checkoutSort.value) {
                rows.sort((a, b) => {
                    const aVal = a.getAttribute('data-checkout-date') || '';
                    const bVal = b.getAttribute('data-checkout-date') || '';
                    return checkoutSort.value === 'asc' ? aVal.localeCompare(bVal) : bVal.localeCompare(aVal);
                });
            }

            // Remove all rows and append them in the new order
            rows.forEach(row => tbody.appendChild(row));
        }

        // Reset all filters
        function resetAllFilters() {
            searchInput.value = '';
            guestSort.value = '';
            bookingSort.value = '';
            checkinSort.value = '';
            checkoutSort.value = '';
            hideCancelled.checked = true;

            // Show all rows
            bookingRows.forEach(row => {
                row.style.display = '';
            });
        }

        // Add event listeners
        searchInput.addEventListener('input', function() {
            applyAllFilters();
        });

        applyFilters.addEventListener('click', function() {
            applyAllFilters();
        });

        resetFilters.addEventListener('click', function() {
            resetAllFilters();
        });

        // Initialize
        applyAllFilters();
    });
</script>