@model COLAFHotel.Models.Room
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewBag.Title = "Create Booking";
    var user = HttpContextAccessor.HttpContext?.Session.GetString("User");
    var role = HttpContextAccessor.HttpContext?.Session.GetString("Role");
    var isGuest = HttpContextAccessor.HttpContext?.Session.GetString("GuestId");
    var user_id = HttpContextAccessor.HttpContext?.Session.GetString("UserId");

    Console.WriteLine();
}
<div class="flex justify-center items-center min-h-screen bg-[var(--fifth-color)] w-full p-6 pt-20">
    @if (!string.IsNullOrEmpty(role))
    {
        <div class="relative bg-[var(--fourth-color)] shadow-xl rounded-lg w-full max-w-4xl overflow-hidden p-6">
            <!-- Room Image -->
            <div class="relative w-full h-[28rem]">
                <img src="@Url.Content(Model.ImageUrl)" class="w-full h-full object-cover rounded-lg brightness-90" />
                <div class="absolute inset-0 bg-gradient-to-t from-black/50 to-transparent"></div>
            </div>

            <!-- Room Details -->
            <div class="p-6">
                <h2 class="text-4xl font-bold text-[var(--primary-color)] mb-4">Room @Model.RoomNumber</h2>
                <p class="text-lg text-gray-700">Category: <span class="text-[var(--secondary-color)] font-semibold">@Model.Category</span></p>                
                <!-- Booking Form -->
                <form method="post" action="@Url.Action("ConfirmBooking", "Booking")" class="mt-6 space-y-4">
                    <input type="hidden" name="RoomId" value="@Model.RoomId" />
                    <input type="hidden" name="RoomNumber" value="@Model.RoomNumber"/>
                    <input type="hidden" name="Category" value="@Model.Category"/>
                    <input type="hidden" name="ImageUrl" value="@Model.ImageUrl"/>
                    <input type="hidden" name="Price" value="@Model.Price" />
                    <input type="hidden" name="UserId" value="@user_id"/>
                    <input type="hidden" name="GuestId" value="@isGuest"/>

                    <!-- Check-in & Check-out Dates -->
                    <div class="grid grid-cols-2 gap-4">
                        <div class="relative group">
                            <label class="block text-lg font-semibold mb-1">Check-in Date:</label>
                            <div class="relative">
                                <input type="text" id="checkInDate" name="CheckInDate" class="datepicker w-full p-2 border rounded-lg pl-10 focus:ring-2 focus:ring-[var(--primary-color)]" onchange="updatePrice()" required>
                                <i class="fa-solid fa-calendar-days absolute left-3 top-3 text-gray-500 group-hover:text-[var(--primary-color)] transition-colors duration-200 cursor-pointer"></i>
                            </div>
                        </div>
                        <div class="relative group">
                            <label class="block text-lg font-semibold mb-1">Check-out Date:</label>
                            <div class="relative">
                                <input type="text" id="checkOutDate" name="CheckOutDate" class="datepicker w-full p-2 border rounded-lg pl-10 focus:ring-2 focus:ring-[var(--primary-color)]" onchange="updatePrice()" required>
                                <i class="fa-solid fa-calendar-days absolute left-3 top-3 text-gray-500 group-hover:text-[var(--primary-color)] transition-colors duration-200 cursor-pointer"></i>
                            </div>
                        </div>
                    </div>

                    <!-- Transport Services -->
                    <div class="border rounded-lg shadow-lg p-4 bg-white">
                        <!-- Checkbox for Transport Service -->
                        <div class="flex items-center gap-3 border-b pb-3">
                            <input type="checkbox" id="transportService" name="TransportService" class="w-6 h-6 accent-blue-600 cursor-pointer" onchange="toggleTransportDetails()">
                            <label for="transportService" class="text-lg font-medium cursor-pointer">Include Transport Service (+₱500)</label>
                        </div>

                        <!-- Transport Service Information (Initially Hidden) -->
                        <div id="transportDetails" class="hidden mt-4">
                            <div class="grid grid-cols-2 gap-6">
                                <div>
                                    <h3 class="text-xl font-semibold text-gray-700">Arrival</h3>
                                    <label class="block text-md font-semibold mt-2">Arrival Time</label>
                                    <select class="w-full p-2 border rounded-lg mt-1 bg-gray-100 focus:ring-2 focus:ring-blue-500">
                                        <option>9:00 AM</option>
                                        <option>10:00 AM</option>
                                        <option>11:00 AM</option>
                                        <option>12:00 PM</option>
                                        <option>1:00 PM</option>
                                        <option>2:00 PM</option>
                                        <option>3:00 PM</option>
                                        <option>4:00 PM</option>
                                        <option>5:00 PM</option>
                                        <option>6:00 PM</option>
                                        <option>7:00 PM</option>
                                        <option>8:00 PM</option>
                                    </select>
                                    <label class="block text-md font-semibold mt-2">Arriving</label>
                                    <input type="text" class="w-full p-2 border rounded-lg mt-1 bg-gray-100 focus:ring-2 focus:ring-blue-500" placeholder="Enter location">
                                </div>
                                <div>
                                    <h3 class="text-xl font-semibold text-gray-700">Departure</h3>
                                    <label class="block text-md font-semibold mt-2">Departure Time</label>
                                    <select class="w-full p-2 border rounded-lg mt-1 bg-gray-100 focus:ring-2 focus:ring-blue-500">
                                        <option>9:00 AM</option>
                                        <option>10:00 AM</option>
                                        <option>11:00 AM</option>
                                        <option>12:00 PM</option>
                                        <option>1:00 PM</option>
                                        <option>2:00 PM</option>
                                        <option>3:00 PM</option>
                                        <option>4:00 PM</option>
                                        <option>5:00 PM</option>
                                        <option>6:00 PM</option>
                                        <option>7:00 PM</option>
                                        <option>8:00 PM</option>
                                    </select>
                                    <label class="block text-md font-semibold mt-2">Departing</label>
                                    <input type="text" class="w-full p-2 border rounded-lg mt-1 bg-gray-100 focus:ring-2 focus:ring-blue-500" placeholder="Enter location">
                                </div>
                            </div>
                            <div class="mt-4 text-right">
                                <button onclick="clearTransportDetails()" class="text-blue-600 hover:text-blue-800 font-semibold">Clear</button>
                            </div>
                        </div>
                    </div>
                    <!-- Payment Options -->
                    <div class="border rounded-lg shadow-lg p-4 bg-white mt-6">
                        <h3 class="text-xl font-semibold mb-3">Payment</h3>
                        <div class="flex items-center space-x-3 mb-4">
                            <img src="https://upload.wikimedia.org/wikipedia/commons/4/41/Visa_Logo.png" alt="Visa" class="w-12 transition-transform duration-300 hover:scale-110 cursor-pointer">
                            <img src="https://upload.wikimedia.org/wikipedia/commons/b/b7/MasterCard_Logo.svg" alt="Mastercard" class="w-12 transition-transform duration-300 hover:scale-110 cursor-pointer">
                            <img src="https://upload.wikimedia.org/wikipedia/commons/3/30/American_Express_logo.svg" alt="Amex" class="w-12 transition-transform duration-300 hover:scale-110 cursor-pointer">
                        </div>
                        <div class="grid grid-cols-1 gap-4">
                            <label class="block">
                                <span class="text-md font-semibold">Card Number</span>
                                <input type="text" class="w-full p-2 border rounded-lg bg-gray-100 focus:ring-2 focus:ring-blue-500" placeholder="1234 5678 9012 3456" required>
                            </label>
                            <div class="grid grid-cols-2 gap-4">
                                <label class="block">
                                    <span class="text-md font-semibold">Expiration Date</span>
                                    <input type="text" class="w-full p-2 border rounded-lg bg-gray-100 focus:ring-2 focus:ring-blue-500" placeholder="MM/YY" required>
                                </label>
                                <label class="block">
                                    <span class="text-md font-semibold">CVV</span>
                                    <input type="text" class="w-full p-2 border rounded-lg bg-gray-100 focus:ring-2 focus:ring-blue-500" placeholder="123" required>
                                </label>
                            </div>
                            <label class="block">
                                <span class="text-md font-semibold">Name on Card</span>
                                <input type="text" class="w-full p-2 border rounded-lg bg-gray-100 focus:ring-2 focus:ring-blue-500" placeholder="John Doe" required>
                            </label>
                        </div>
                    </div>

                    <!-- Booking Policies -->
                    <div class="border rounded-lg shadow-lg p-6 bg-[#3E2723] text-[#D7CCC8] mt-6">
                        <h2 class="text-2xl font-bold mb-4 text-[#FFCC80] flex items-center">
                            <svg xmlns="http://www.w3.org/2000/svg" class="w-6 h-6 mr-2" viewBox="0 0 24 24" fill="currentColor">
                                <path d="M20 3H4a1 1 0 00-1 1v14a1 1 0 001 1h2a3 3 0 003 3h6a3 3 0 003-3h2a1 1 0 001-1V4a1 1 0 00-1-1zm-6 17h-4a1 1 0 01-1-1h6a1 1 0 01-1 1zM19 16H5V5h14v11z" />
                            </svg>
                            Hotel Booking Policy
                        </h2>
                        <ul class="list-disc list-inside text-[#EFEBE9] space-y-3">
                            <li><strong>🛏️ Reservation Confirmation:</strong> Your stay is secured once full payment is received. A confirmation email will be sent immediately.</li>
                            <li><strong>❌ Cancellation Policy:</strong> Cancel **at least 48 hours** before check-in for a full refund. Late cancellations may incur a charge.</li>
                            <li><strong>🔄 Modification Policy:</strong> Need to adjust your dates? Changes are allowed up to **24 hours** before check-in, subject to availability.</li>
                            <li><strong>💳 Payment Terms:</strong> We accept all major credit cards and digital payments. Your booking is only confirmed once payment is processed.</li>
                            <li><strong>🚪 No-Show Policy:</strong> If you don’t check in on the scheduled date, your reservation will be forfeited, and no refunds will be issued.</li>
                            <li><strong>🕒 Check-in & Check-out:</strong> Check-in is from **2:00 PM**, and check-out is by **11:00 AM**. Early check-in or late check-out is subject to availability and extra charges.</li>
                            <li><strong>🏨 Guest Policy:</strong> A valid ID is required at check-in. Additional guests may be subject to extra charges.</li>
                            <li><strong>📞 Contact Support:</strong> For any booking changes or questions, reach out to our front desk **at least 24 hours** before your stay.</li>
                        </ul>
                    </div>



                    <!-- Price Details (Coffee-Themed) -->
                    <div class="bg-[#4E342E] text-[#D7CCC8] rounded-lg shadow-lg p-6 mt-6">
                        <h2 class="text-2xl font-bold mb-4 text-[#FFCC80]">Price Breakdown</h2>

                        <div class="space-y-3 grid grid-cols-1">
                            <div class="flex flex-row justify-between items-center">
                                <p><strong>Room:</strong> @Model.Category Room (R @Model.RoomNumber)</p>
                                <p class="text-green-500">₱@Model.Price.ToString("N2")</p>
                            </div>
                            <div class="flex flex-row justify-between items-center">
                                <p>
                                    <strong>Nights of Stay:</strong>
                                    <span id="numberOfNights" class="text-red-400 underline">0</span> Nights
                                </p>
                                <p class="text-green-500">₱<span id="nightPrice">0</span></p>
                            </div>
                            <div class="flex flex-row justify-between items-center">
                                <strong>Transport Service Fee</strong>
                                <p class="text-green-500">₱<span id="transportFee">0</span></p>
                            </div>
                            <p>
                                <span id="checkInDay">Check-in Day</span> -
                                <span id="checkOutDay">Check-out Day</span>
                            </p>
                        </div>

                        <div class="mt-4 p-3 bg-[#3E2723] rounded-lg">
                            <label class="text-lg font-bold text-[#FFCC80]">Total</label>
                            <p class="text-xl font-semibold text-green-400">
                                Total Price: ₱<span id="totalPrice">@Model.Price.ToString("N2")</span>
                            </p>
                            <!--Storing Total Price-->
                            <input type="hidden" name="totalPrice" id="hiddenTotalPrice"/>
                        </div>
                    </div>


                    

                    <!-- Buttons -->
                    <div class="mt-6 flex flex-col sm:flex-row gap-4">
                        <button type="submit" class="w-full sm:w-auto px-6 py-3 bg-[var(--primary-color)] text-white text-lg font-medium rounded-lg shadow-md transition-all hover:scale-105">
                            BOOK NOW
                        </button>
                        <a class="w-full sm:w-auto px-6 py-3 bg-[var(--secondary-color)] text-white text-lg font-medium rounded-lg shadow-md transition-all hover:bg-[var(--third-color)]">
                            SAVE FOR LATER
                        </a>
                    </div>
                </form>
            </div>
        </div>
    }
    else
    {
        <p class="text-red-500 font-semibold">Access Denied: Role not defined.</p>
        <script>
            setTimeout(function () {
                window.location.href = "/User/Login";
            }, 3000);
        </script>
    }
</div>
@if (TempData["Error"] != null)
{
    <div id="errorModal" class="fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50">
        <div class="bg-white p-6 rounded-lg shadow-lg max-w-sm w-full">
            <h2 class="text-xl font-semibold text-red-600 mb-2">Error</h2>
            <p class="text-gray-700">@TempData["Error"]</p>
            <div class="mt-4 flex justify-end">
                <button onclick="closeErrorModal()" class="bg-red-500 hover:bg-red-600 text-white px-4 py-2 rounded-lg">
                    Close
                </button>
            </div>
        </div>
    </div>
}
<script>
    function updatePrice() {
        let basePrice = @Model.Price;
        let checkInDate = new Date(document.getElementById('checkInDate').value);
        let checkOutDate = new Date(document.getElementById('checkOutDate').value);
        let transportService = document.getElementById('transportService').checked;
        let hiddenTotalPrice = document.getElementById('hiddenTotalPrice');

        //Values needed to be changed
        let numberOfNights = document.getElementById('numberOfNights');
        let transportFee = document.getElementById('transportFee');
        let checkInDay = document.getElementById('checkInDay');
        let checkOutDay = document.getElementById('checkOutDay');
        let nightPrice = document.getElementById('nightPrice');

        // Calculate number of nights
        let nights = (checkOutDate > checkInDate) ? (checkOutDate - checkInDate) / (1000 * 60 * 60 * 24) : 1;

        // Change values in the html
        numberOfNights.textContent  = nights;

        // Format numbers properly with commas
        let nightPriceAdded = ((basePrice * nights) - basePrice);
        let transportFeeAdded  = transportService ? 500.00 : 0.00;

        let formattedNightPrice = nightPriceAdded.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
        let formattedTransportFee = transportFeeAdded.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });

        checkInDay.textContent  = checkInDate.toDateString();
        checkOutDay.textContent  = checkOutDate.toDateString();
        nightPrice.textContent = formattedNightPrice;
        transportFee.textContent = formattedTransportFee;
 

        // Update price: (base price * guests * nights) + transport fee
        let totalPrice = (basePrice * nights) + (transportService ? 500 : 0);
        let formattedTotalPrice = totalPrice.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
        document.getElementById('totalPrice').textContent = formattedTotalPrice;
        hiddenTotalPrice.value = totalPrice;
    }
    function toggleTransportDetails() {
        updatePrice();
        const details = document.getElementById("transportDetails");
        details.classList.toggle("hidden");
    }

    function closeErrorModal() {
        document.getElementById("errorModal").style.display = "none";
    }

    document.addEventListener("DOMContentLoaded", function () {
        var roomId = document.getElementsByName("RoomId")[0].value;
        let tomorrow = new Date();
        let today = new Date();
        tomorrow.setDate(tomorrow.getDate() + 1); // Move to next day

        fetch(`/GetUnavailableDates?roomId=${roomId}`)
            .then(response => response.json())
            .then(dates => {
                flatpickr(".datepicker", {
                    dateFormat: "Y-m-d",
                    disableMobile: "true",
                    disable: dates.map(date => new Date(date)), // Disable booked dates
                    minDate: tomorrow, // Prevent past date selection
                    maxDate: new Date(today.getFullYear(), today.getMonth() + 12, today.getDate()),
                    prevArrow: "←",
                    nextArrow: "→"
                });
            });
    });

</script>
